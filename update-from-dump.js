const fs = require('fs');
const path = require('path');

async function updateFromDump() {
  try {
    console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª—ã –¥–∞–Ω–Ω—ã—Ö –∏–∑ –¥–∞–º–ø–∞...');

    // –ß–∏—Ç–∞–µ–º –¥–∞–º–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    const dumpPath = path.join(__dirname, 'database-dump.json');
    if (!fs.existsSync(dumpPath)) {
      console.error('‚ùå –§–∞–π–ª database-dump.json –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ dump-database.js');
      return;
    }

    const databaseDump = JSON.parse(fs.readFileSync(dumpPath, 'utf8'));
    console.log(`üìä –ó–∞–≥—Ä—É–∂–µ–Ω –¥–∞–º–ø —Å ${databaseDump.totalRecords} –∑–∞–ø–∏—Å—è–º–∏`);

    // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª userData.tsx
    if (databaseDump.users && databaseDump.users.length > 0) {
      const userDataPath = path.join(__dirname, 'src/lib/dump-data/userData.tsx');
      const userDataContent = `import { User } from './types';

export const userData: User[] = ${JSON.stringify(databaseDump.users, null, 2)};

export default userData;
`;
      fs.writeFileSync(userDataPath, userDataContent);
      console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω —Ñ–∞–π–ª userData.tsx —Å ${databaseDump.users.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏`);
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª toolsData.tsx
    if (databaseDump.tools && databaseDump.tools.length > 0) {
      const toolsDataPath = path.join(__dirname, 'src/lib/dump-data/toolsData.tsx');
      const toolsDataContent = `import { Tool } from './types';

const data: Tool[] = ${JSON.stringify(databaseDump.tools, null, 2)};

export default data;
`;
      fs.writeFileSync(toolsDataPath, toolsDataContent);
      console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω —Ñ–∞–π–ª toolsData.tsx —Å ${databaseDump.tools.length} –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏`);
    }

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª —Å –∫—É—Ä—Å–∞–º–∏ –∏ —É—Ä–æ–∫–∞–º–∏
    if (databaseDump.courses && databaseDump.lessons && databaseDump.stages) {
      const lessonsDataPath = path.join(__dirname, 'src/lib/dump-data/lessonsData.tsx');
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
      const coursesData = databaseDump.courses;
      const lessonsData = databaseDump.lessons;
      const stageData = databaseDump.stages;

      const lessonsDataContent = `export const coursesData = ${JSON.stringify(coursesData, null, 2)};

export const lessonsData = ${JSON.stringify(lessonsData, null, 2)};

export const stageData = ${JSON.stringify(stageData, null, 2)};
`;
      fs.writeFileSync(lessonsDataPath, lessonsDataContent);
      console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω —Ñ–∞–π–ª lessonsData.tsx`);
      console.log(`   - –ö—É—Ä—Å–æ–≤: ${coursesData.length}`);
      console.log(`   - –£—Ä–æ–∫–æ–≤: ${lessonsData.length}`);
      console.log(`   - –≠—Ç–∞–ø–æ–≤: ${stageData.length}`);
    }

    console.log('üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    console.log('üí° –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∏–¥–∏–Ω–≥: npm run seed');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤:', error);
  }
}

updateFromDump(); 