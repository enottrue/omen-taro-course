const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function checkPaidUsers() {
  try {
    console.log('üí∞ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º –æ–ø–ª–∞—Ç—ã...\n');

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å isPaid: true
    const paidUsers = await prisma.user.findMany({
      where: {
        isPaid: true,
      },
      select: {
        id: true,
        email: true,
        name: true,
        isPaid: true,
        paymentDate: true,
        stripeSessionId: true,
        onboarded: true,
        createdAt: true,
        updatedAt: true,
      },
    });

    if (paidUsers.length === 0) {
      console.log('‚ùå –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º –æ–ø–ª–∞—Ç—ã');
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${paidUsers.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º –æ–ø–ª–∞—Ç—ã:`);
      paidUsers.forEach(user => {
        console.log(`\n   üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:`);
        console.log(`      - ID: ${user.id}`);
        console.log(`      - Email: ${user.email}`);
        console.log(`      - –ò–º—è: ${user.name}`);
        console.log(`      - –°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã: ${user.isPaid ? 'üí≥ –û–ø–ª–∞—á–µ–Ω' : 'üîí –ù–µ –æ–ø–ª–∞—á–µ–Ω'}`);
        console.log(`      - –î–∞—Ç–∞ –æ–ø–ª–∞—Ç—ã: ${user.paymentDate || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}`);
        console.log(`      - Stripe Session ID: ${user.stripeSessionId || '–ù–µ —É–∫–∞–∑–∞–Ω'}`);
        console.log(`      - –û–Ω–±–æ—Ä–¥–∏–Ω–≥: ${user.onboarded ? '‚úÖ –ü—Ä–æ–π–¥–µ–Ω' : '‚ùå –ù–µ –ø—Ä–æ–π–¥–µ–Ω'}`);
        console.log(`      - –°–æ–∑–¥–∞–Ω: ${user.createdAt}`);
        console.log(`      - –û–±–Ω–æ–≤–ª–µ–Ω: ${user.updatedAt}`);
      });
    }

    // –¢–∞–∫–∂–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const allUsers = await prisma.user.findMany({
      select: {
        isPaid: true,
      },
    });

    const paidCount = allUsers.filter(u => u.isPaid).length;
    const totalCount = allUsers.length;

    console.log(`\nüìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
    console.log(`   - –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${totalCount}`);
    console.log(`   - –û–ø–ª–∞—á–µ–Ω–Ω—ã—Ö: ${paidCount}`);
    console.log(`   - –ù–µ –æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö: ${totalCount - paidCount}`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await prisma.$disconnect();
  }
}

checkPaidUsers(); 