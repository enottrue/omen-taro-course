generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model Tool {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String   @db.Text
  link        String
  image       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  phone     String?
  city      String?
  password  String
  onboarded Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Course {
  id        Int      @id @default(autoincrement())
  name      String
  lessons   Lesson[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Lesson {
  id                Int      @id @default(autoincrement())
  lessonNumber      Int
  lessonName        String
  lessonDescription String?
  lessonStages      Stage[]
  lessonTimecodes   String[]
  lessonStatus      String   @default("new")
  courseId          Int
  course            Course   @relation(fields: [courseId], references: [id], onDelete: Cascade)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model StageTimecode {
  id            Int      @id @default(autoincrement())
  name          String
  timeCodeStart String
  timeCodeEnd   String
  stageId       Int
  stage         Stage    @relation(fields: [stageId], references: [id], onDelete: Cascade)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Stage {
  id               Int             @id @default(autoincrement())
  stageNumber      Int
  stageName        String
  stageDescription String?
  lessonId         Int
  stageTimecodes   StageTimecode[]
  lesson           Lesson          @relation(fields: [lessonId], references: [id], onDelete: Cascade)
}
