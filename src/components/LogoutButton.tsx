import React, { useContext, useState, useEffect } from 'react';
import Cookies from 'js-cookie';
import { useRouter } from 'next/router';
import { MainContext } from '@/contexts/MainContext';

const LogoutButton: React.FC = () => {
  const router = useRouter();
  const cc = useContext(MainContext);
  const [isClient, setIsClient] = useState(false);
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–∏–¥—Ä–∞—Ç–∞—Ü–∏–∏
  useEffect(() => {
    setIsClient(true);
  }, []);
  
  // –ù–µ —Ä–µ–Ω–¥–µ—Ä–∏–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
  if (!isClient) return null;

  const handleLogout = () => {
    // –û—á–∏—â–∞–µ–º cookies
    Cookies.remove('Bearer');
    Cookies.remove('userId');
    
    // –û—á–∏—â–∞–µ–º localStorage
    localStorage.removeItem('token');
    localStorage.removeItem('userId');
    localStorage.removeItem('onboarded');
    
    // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
    cc?.setToken(null);
    cc?.setUserId(null);
    cc?.setUser(null);
    cc?.setMenuOpen(false);
    
    // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é
    router.push('/');
  };

  return (
    <button 
      onClick={handleLogout}
      style={{
        position: 'fixed',
        bottom: '20px',
        left: '20px',
        padding: '10px 20px',
        backgroundColor: '#ff4444',
        color: 'white',
        border: 'none',
        borderRadius: '5px',
        cursor: 'pointer',
        zIndex: 9998,
        fontSize: '14px',
        fontWeight: 'bold'
      }}
    >
      üö™ –í—ã–π—Ç–∏
    </button>
  );
};

export default LogoutButton; 